#===============================================================================
#
# ERR INJECT Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2014 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.adsp/2.6.1/debugtools/eic/build/err_inject.scons#2 $
#  $DateTime: 2014/10/20 19:14:32 $
#  $Author: pwbldsvc $
#  $Change: 6803795 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 08/27/14   din     Created separate file for ERR Inject.
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# SUPPORTED IMAGES
#-------------------------------------------------------------------------------

CRASH_INJECT_ROOT_IMG = [
    'CORE_QDSP6_SW',
#    'CORE_QDSP6_SENSOR_SW',
#    'CORE_QDSP6_AUDIO_SW'
]

CRASH_INJECT_USER_IMG = [
#    'CORE_QDSP6_SW',
    'CORE_QDSP6_SENSOR_SW',
#    'CORE_QDSP6_AUDIO_SW'
]

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/debugtools/eic/src"
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Features and Definitions
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES=['ERR_IMG_ADSP'])
env.Append(CPPDEFINES=['ERR_HW_QDSP6'])
env.Append(CPPDEFINES=['ERR_CFG_QURT'])

#check for missing dependencies
if 'USES_ERR_INJECT_CRASH' in env:
    env.Append(CPPDEFINES=['ERR_INJECT_CRASH'])

if 'USES_DEVCFG' in env:
    env.Append(CPPDEFINES=['ERR_USES_DEVCFG'])

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------

env.RequireExternalApi([
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------

CBSP_API = [
   'DAL',
   'DEBUGTOOLS',
   'SERVICES',
   'SYSTEMDRIVERS',

   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Sources
#-------------------------------------------------------------------------------
#Some sections meant for Uerr, Should be explicitly added for island mode
ERR_INJECT_CRASH_ROOT_SOURCES = [
   '${BUILDPATH}/err_inject_crash.c',
   '${BUILDPATH}/err_inject_crash_root.c',
]

ERR_INJECT_CRASH_USER_SOURCES = [
   '${BUILDPATH}/err_inject_crash.c',
   '${BUILDPATH}/err_inject_crash_user.c',
]

island_section = ['.text.uErr','.data.uErr']

#-------------------------------------------------------------------------------
# Libraries
#-------------------------------------------------------------------------------

if 'USES_ERR_INJECT_CRASH' in env:
    env.AddLibrary(CRASH_INJECT_ROOT_IMG, '${BUILDPATH}/err_inject_crash_root', ERR_INJECT_CRASH_ROOT_SOURCES )
    err_inject_crash_libs = env.AddLibrary(CRASH_INJECT_USER_IMG, '${BUILDPATH}/err_inject_crash_user', ERR_INJECT_CRASH_USER_SOURCES )
    
    if 'USES_ISLAND' in env:
       env.AddIslandLibrary(CRASH_INJECT_USER_IMG, err_inject_crash_libs, island_section )
       env.Append(CFLAGS = "-DUERR_ISLAND_MODE ")

# Devcfg Registrations
if 'USES_ERR_INJECT_CRASH' in env:
    if 'USES_DEVCFG' in env:
        DEVCFG_IMG = ['DAL_DEVCFG_IMG']
        env.AddDevCfgInfo(DEVCFG_IMG,
        {
         'soc_xml' : ['${BUILD_ROOT}/core/debugtools/eic/src/err_inject_crash.xml']
        })

if 'USES_DEVCFG' in env: 
  if 'USES_ERR_INJECT_CRASH' in env:
    if 'USES_SENSOR_IMG' in env:
      DEVCFG_IMG_SENSORS = ['DEVCFG_CORE_QDSP6_SENSOR_SW']
      env.AddDevCfgInfo(DEVCFG_IMG_SENSORS,
      {
         'soc_xml' : ['${BUILD_ROOT}/core/debugtools/eic/src/err_inject_crash.xml']
      })

#if 'USES_DEVCFG' in env: 
#  if 'USES_ERR_INJECT_CRASH' in env:
#    if 'USES_AUDIO_IMG' in env:
#      DEVCFG_IMG_AUDIO = ['DEVCFG_CORE_QDSP6_AUDIO_SW']
#      env.AddDevCfgInfo(DEVCFG_IMG_AUDIO,
#      {
#         'soc_xml' : ['${BUILD_ROOT}/core/debugtools/eic/src/err_inject_crash.xml']
#      })      
      
if 'USES_ERR_INJECT_CRASH' in env:
  if 'USES_RCINIT' in env:
    env.AddRCInitFunc( 
     CRASH_INJECT_ROOT_IMG, 
     {
      'sequence_group'             : 'RCINIT_GROUP_2',                   # required
      'init_name'                  : 'err_inject_crash_init',            # required
      'init_function'              : 'err_inject_crash_init',            # required
     # 'dependencies'               : ['',]
     })

if 'USES_ERR_INJECT_CRASH' in env:
  if 'USES_RCINIT' in env:
    if 'USES_SENSOR_IMG' in env:
      env.AddRCInitFunc( 
       CRASH_INJECT_USER_IMG, 
       {
        'sequence_group'             : 'RCINIT_GROUP_2',                   # required
        'init_name'                  : 'err_inject_crash_init',            # required
        'init_function'              : 'err_inject_crash_init',            # required
       # 'dependencies'               : ['',]
       })

