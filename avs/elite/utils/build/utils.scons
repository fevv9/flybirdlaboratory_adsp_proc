#===============================================================================
#
# AVS AU
#
# GENERAL DESCRIPTION
#    Build script
#
# Copyright (c) 2009-2009 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //source/qcom/qct/multimedia2/dsp/qdsp6/sandbox/VPMSM8974/lpass_proc/avs/elite/utils/build/utils.scons#1 $
#  $DateTime: 2013/01/04 08:45:43 $
#  $Author: ktadakam $
#  $Change: 3193584 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================
Import('env')

#-------------------------------------------------------------------------------
# Make all warnings into errors
#-------------------------------------------------------------------------------
env.Append(CFLAGS = '-Werror')

if 'USES_ENABLE_FUNCTION_SECTIONS' in env:
   env.Append(CFLAGS = '-ffunction-sections')

#import pdb; pdb.set_trace()

if 'USES_USND_SVC_TEST' in env:
   env.Append(CFLAGS = ' -DUSND_TEST')
   env.Append(CPPFLAGS = ' -DUSND_TEST')
   temp=env.get('CFLAGS')
   if '-DADSP_TEST_ENTRY' in temp:
       temp.remove('-DADSP_TEST_ENTRY')
       env.Replace(CFLAGS=temp)

if 'USES_AUDIO_PROC_SVC_TEST' in env:
   env.Append(CFLAGS = ' -DAUDPPSVC_TEST ')
   env.Append(CPPFLAGS = ' -DAUDPPSVC_TEST ')
   temp=env.get('CFLAGS')
   if '-DADSP_TEST_ENTRY' in temp:
       temp.remove('-DADSP_TEST_ENTRY')
       env.Replace(CFLAGS=temp)
   
core_public_apis = [
   'DEBUGTOOLS',
   'KERNEL',
   'POWER',
   'SERVICES',
   'DAL',
   'MPROC'
   ]

platform_public_apis = [
    'QAIC',
    'STDDEF',
    'HAPSDK'
    ]

env.RequirePublicApi(core_public_apis, area='core')
env.RequireRestrictedApi(['AVS', 'MODULE_INTERFACES_API'])
env.RequireProtectedApi('AVS')
env.RequirePublicApi('ADSP_AMDB')

env.RequirePublicApi(platform_public_apis, area='platform') # This has to be the last include command, so that the Elite_CAPI.h and Elite_APPI.h are not overridden

env.PublishPrivateApi('AVS',[
   '../inc',
   '../build',
   '../tst',
   '../../../../qdsp6/tp/inc',
   '../../../../core/api/services'
   ])

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = ".."
LIBNAME = 'EliteCmnUtils'

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

avs_sources = env.GlobSourceFiles(['src/*.cpp', 'src/*.c', 'tst/*.cpp'], SRCPATH,posix=True)

# Dependency on the header files for amdb. These files are generated as part of the build
env.AddQaicHeaderDep(avs_sources, "adsp_amdb")

env.AddLibrary(['AVS_ADSP'], '${BUILDPATH}/'+LIBNAME, avs_sources)

#-------------------------------------------------------------------------------
# Device CFG data
#-------------------------------------------------------------------------------
LIBNAME_DEVCFG = 'lpm_devcfg'

#avs_sources_devcfg = env.GlobSourceFiles(['devcfg/src/*.cpp', 'devcfg/src/*.c'], SRCPATH, posix=True)
 
if 'USES_DEVCFG' in env:
    DEVCFG_IMG = ['DAL_DEVCFG_IMG']
    env.AddDevCfgInfo(DEVCFG_IMG, 
    {
      '8974_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8974.c'],
      '8x10_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                    '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8x10.c'],
      '8x26_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8x26.c'],
      '9x25_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_9x25.c'],
      '8092_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8092.c'],
      '8084_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8084.c'],
      '8926_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8926.c'],
      '8x62_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8x62.c'],                 
      '8962_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8962.c'],
      '9x35_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_9x35.c'],
      '8992_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8992.c'],
      '8994_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8994.c'],
      '8996_xml' : ['${AVS_ROOT}/elite/utils/devcfg/config/lpm.xml',
                   '${AVS_ROOT}/elite/utils/devcfg/src/lpm_cfg_8996.c']
   

    })
